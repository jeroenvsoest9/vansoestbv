rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Public assets (images, etc.)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }

    // User uploads
    match /uploads/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Invoices
    match /invoices/{invoiceId}/{allPaths=**} {
      allow read: if isAuthenticated() && 
        (isAdmin() || firestore.get(/databases/(default)/documents/invoices/$(invoiceId)).data.userId == request.auth.uid);
      allow write: if isAuthenticated() && isAdmin();
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 