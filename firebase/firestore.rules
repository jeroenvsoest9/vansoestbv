rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Content collection
    match /content/{contentId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }

    // Settings collection
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }

    // Menus collection
    match /menus/{menuId} {
      allow read: if true;
      allow write: if isAuthenticated() && isAdmin();
    }

    // Invoices collection
    match /invoices/{invoiceId} {
      allow read: if isAuthenticated() && 
        (isAdmin() || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isAuthenticated() && isAdmin();
      allow delete: if isAuthenticated() && isAdmin();
    }
  }
} 